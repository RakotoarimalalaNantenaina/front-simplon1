{"ast":null,"code":"import _defineProperty from \"/home/dev/Bureau/RepoGit/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dev/Bureau/RepoGit/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Bureau/RepoGit/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Bureau/RepoGit/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Bureau/RepoGit/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Bureau/RepoGit/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Bureau/RepoGit/TEST-SIMPLON/client/src/components/auth/Login.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this));\n    _this.state = {\n      modal: false\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var userData = {\n        email: _this.state.email,\n        password: _this.state.password\n      };\n\n      _this.props.loginUser(userData);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // If logged in and user navigates to Login page, should redirect them to dashboard\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement, _React$createElement2;\n\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"h5 text-center mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Connexion\"), React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(MDBInput, (_React$createElement = {\n        label: \"Votre adresse e-mail\",\n        icon: \"envelope\",\n        group: true,\n        type: \"email\",\n        error: \"wrong\",\n        success: \"right\",\n        onChange: this.onChange,\n        value: this.state.email\n      }, _defineProperty(_React$createElement, \"error\", errors.email), _defineProperty(_React$createElement, \"id\", \"email\"), _defineProperty(_React$createElement, \"type\", \"email\"), _defineProperty(_React$createElement, \"className\", classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      })), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, errors.email, errors.emailnotfound), React.createElement(MDBInput, (_React$createElement2 = {\n        label: \"Votre mot de passe\",\n        icon: \"lock\",\n        group: true,\n        type: \"password\",\n        onChange: this.onChange,\n        value: this.state.password,\n        error: errors.password,\n        id: \"password\"\n      }, _defineProperty(_React$createElement2, \"type\", \"password\"), _defineProperty(_React$createElement2, \"className\", classnames(\"\", {\n        invalid: errors.password || errors.passwordincorrect\n      })), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2)), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, errors.password, errors.passwordincorrect)), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Se Connecter\"))))), React.createElement(\"div\", {\n        style: {\n          marginTop: \"4rem\"\n        },\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s8 offset-s2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Connexion\")), React.createElement(\"p\", {\n        className: \"grey-text text-darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Avez-vous deja un compte?? \", React.createElement(Link, {\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Inscription\"))), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.email,\n        error: errors.email,\n        id: \"email\",\n        type: \"email\",\n        className: classnames(\"\", {\n          invalid: errors.email || errors.emailnotfound\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Adresse e-mail\"), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, errors.email, errors.emailnotfound)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.password,\n        error: errors.password,\n        id: \"password\",\n        type: \"password\",\n        className: classnames(\"\", {\n          invalid: errors.password || errors.passwordincorrect\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Mot de passe\"), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, errors.password, errors.passwordincorrect)), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Se connecter\"))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser: loginUser\n})(Login);","map":{"version":3,"sources":["/home/dev/Bureau/RepoGit/TEST-SIMPLON/client/src/components/auth/Login.js"],"names":["React","Component","Link","MDBRow","MDBCol","MDBInput","MDBBtn","PropTypes","connect","loginUser","classnames","Login","state","modal","toggle","setState","onChange","e","target","id","value","onSubmit","preventDefault","userData","email","password","props","errors","auth","isAuthenticated","history","push","nextProps","invalid","emailnotfound","passwordincorrect","marginTop","paddingLeft","width","borderRadius","letterSpacing","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn} from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  state = {\n    modal: false\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n\n<MDBRow>\n          <MDBCol md=\"6\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <p className=\"h5 text-center mb-4\">Connexion</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"Votre adresse e-mail\"\n                  icon=\"envelope\"\n                  group\n                  type=\"email\"\n                 \n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n\n                />\n                 <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n                <MDBInput\n                  label=\"Votre mot de passe\"\n                  icon=\"lock\"\n                  group\n                  type=\"password\"\n                \n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                 <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"text-center\">\n                <MDBBtn type=\"submit\">Se Connecter</MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Connexion</b>\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n               Avez-vous deja un compte?? <Link to=\"/register\">Inscription</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Adresse e-mail</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Mot de passe</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn-primary\"\n                >\n                 Se connecter\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n"]},"metadata":{},"sourceType":"module"}